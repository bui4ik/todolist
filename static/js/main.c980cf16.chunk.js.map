{"version":3,"sources":["assets/more.svg","assets/two-rows-and-three-columns-layout.svg","assets/three-rows-layout-content-structure-design.svg","store/tasksList/selectors.js","utils/ThemeProvider.js","store/tasksList/actions.js","store/reducer.js","store/tasksList/reducer.js","store/index.js","config/routes.js","pages/Template/SideBar/styles.js","pages/Template/SideBar/index.js","config/theme.js","pages/Template/Header/styles.js","store/tasksList/thunk.js","pages/Template/Header/AddEditTaskForm/styles.js","pages/Template/Header/AddEditTaskForm/FormItems/titleInput.js","pages/Template/Header/AddEditTaskForm/FormItems/decsriptionTextArea.js","pages/Template/Header/AddEditTaskForm/FormItems/priorityRadioButtons.js","pages/Template/Header/AddEditTaskForm/FormItems/colorsRadioButtons.js","pages/Template/Header/AddEditTaskForm/index.js","pages/Template/Header/index.js","pages/Template/styles.js","pages/Template/index.js","pages/Settings/styles.js","pages/Settings/index.js","pages/TasksList/Task/Badge/styles.js","pages/TasksList/Task/Badge/index.js","pages/TasksList/Task/AdditionalInfo/styles.js","pages/TasksList/Task/AdditionalInfo/index.js","pages/TasksList/Task/MainInfo/styles.js","pages/TasksList/Task/MainInfo/index.js","pages/TasksList/Task/styles.js","pages/TasksList/Task/index.js","pages/TasksList/SectionTitle/PrioritySortForm/styles.js","pages/TasksList/SectionTitle/PrioritySortForm/index.js","pages/TasksList/SectionTitle/styles.js","pages/TasksList/SectionTitle/index.js","pages/TasksList/styles.js","pages/TasksList/index.js","routes/index.js","GlobalStyle.js","App.js","index.js","assets/to-do-list.svg","assets/home.svg","assets/settings.svg","assets/spiderman.jpg"],"names":["module","exports","__webpack_require__","p","initialState","tasks","id","name","description","creationDate","isCompleted","priority","badgeColor","prioritySortType","dateSortType","isLoading","error","colorScheme","viewType","tasksSelector","_ref","tasksList","colorSchemeSelector","_ref4","prioritySelector","_ref6","prioritySortSelector","state","_ref5","sort","a","b","sortByDateSelector","filter","task","connect","selectors","children","react_default","createElement","styled_components_browser_esm","theme","mode","addTaskSuccess","newTask","type","payload","deleteTaskSuccess","completeTaskSuccess","setPrioritySortType","priorityType","setDateSortType","setColorScheme","colorSchemeType","setViewType","persistConfig","key","storage","rootReducer","persistReducer","arguments","length","undefined","Object","objectSpread","concat","toConsumableArray","map","history","createBrowserHistory","routerMiddleware","useRouterMiddleware","reducer","combineReducers","router","connectRouter","middleware","thunk","composedEnhancers","compose","apply","applyMiddleware","store","createStore","persistor","persistStore","routes","root","setting","Container","styled","div","_templateObject","Logo","ReactSVG","_templateObject2","Menu","_templateObject3","Item","NavLink","_templateObject4","Sidebar","src","logo","exact","to","react_svg_esm","home","settings","backgroundColor","light","dark","mainTextColor","taskBorderColor","mainButtonColor","Header","styles_templateObject","Hamburger","styles_templateObject2","HamburgerBar","styles_templateObject3","ButtonsContainer","styles_templateObject4","Button","_templateObject5","button","_templateObject6","UserPhoto","_templateObject7","photo","addTask","asyncToGenerator","regenerator_default","mark","_callee","dispatch","wrap","_context","prev","next","actions","e","console","log","stop","_x","this","deleteTask","_ref2","_callee2","_context2","_x2","completeTask","_ref3","_callee3","_context3","_x3","editTask","info","_callee4","_context4","_x4","btn","css","AddEditTaskForm_styles_templateObject","btnDefault","AddEditTaskForm_styles_templateObject2","btnPrimary","FormContainer","AddEditTaskForm_styles_templateObject3","AddEditTaskForm_styles_templateObject4","styles_templateObject5","ExitButton","styles_templateObject6","Title","styles_templateObject7","TaskName","_templateObject8","_templateObject9","RadioButtonsContainer","_templateObject10","RadioButtonsLabel","label","_templateObject11","RadioButtonsItem","_templateObject12","props","FieldInput","Field","_templateObject13","TitleInput","component","required","DescriptionTextArea","PriorityRadioButtons","react_final_form_es","value","ColorsRadioButtons","AddTaskForm","onSubmit","values","_this$props","_this","exitForm","formType","taskId","_this$props$actions","reduce","max","Date","now","_this$props2","formName","initialValues","AddEditTaskForm_styles_Header","onClick","render","handleSubmit","submitting","pristine","titleInput","decsriptionTextArea","priorityRadioButtons","colorsRadioButtons","styles_Button","disabled","React","Component","bindActionCreators","addTaskWindow","openAddTaskWindow","setState","closeAddTaskWindow","styles_Header","AddEditTaskForm","Template_styles_templateObject","Area","Template_styles_templateObject2","Content","Template_styles_templateObject3","Template","styles_Container","SideBar","Template_Header","Settings_styles_templateObject","Settings_styles_templateObject2","SettingName","Settings_styles_templateObject3","ColorsForm","form","Settings_styles_templateObject4","ColorsLabel","Settings_styles_templateObject5","ColorsButton","Settings_styles_templateObject6","changeColorScheme","pages_Template","styles_Title","Settings_styles_Container","className","Badge_styles_templateObject","Letter","Badge_styles_templateObject2","Badge","Badge_styles_Container","toUpperCase","AdditionalInfo_styles_templateObject","Priority","AdditionalInfo_styles_templateObject2","CompleteStatus","AdditionalInfo_styles_templateObject3","CreationDate","Moment","AdditionalInfo_styles_templateObject4","AdditionalInfo","Fragment","AdditionalInfo_styles_Container","format","MainInfo_styles_templateObject","Name","MainInfo_styles_templateObject2","Description","MainInfo_styles_templateObject3","EditTaskContainer","MainInfo_styles_templateObject4","MoreContainer","MainInfo_styles_templateObject5","EditTask","MainInfo_styles_templateObject6","EditTaskButton","MainInfo_styles_templateObject7","MainInfo","taskSettings","openCloseTaskSettings","openCloseTaskEditor","currentTarget","_this2","_this$state","MainInfo_styles_Container","OutsideClickHandler","onOutsideClick","more","Task_styles_templateObject","TaskBody","Task_styles_templateObject2","Task","index","react_beautiful_dnd_esm","draggableId","provided","Task_styles_Container","assign","draggableProps","dragHandleProps","ref","innerRef","Task_Badge","Task_AdditionalInfo","Task_MainInfo","Sorting","PrioritySortForm_styles_templateObject","PrioritySortForm_styles_templateObject2","PriorityItem","PrioritySortForm_styles_templateObject3","PrioritySubmitButton","PrioritySortForm_styles_templateObject4","PrioritySortForm","sortWindow","openCloseSortWindow","styles_Priority","SectionTitle_styles_templateObject","SectionTitle_styles_templateObject2","TasksCount","SectionTitle_styles_templateObject3","SortingContainer","SectionTitle_styles_templateObject4","ViewButton","SectionTitle_styles_templateObject5","SortByDateButton","SectionTitle_styles_templateObject6","TasksDisplayTypeContainer","SectionTitle_styles_templateObject7","TasksDisplayTypeButton","styles_templateObject8","SectionTitle","text","showView","count","sortActiveTasks","SectionTitle_styles_Container","SectionTitle_styles_Title","row","column","SectionTitle_PrioritySortForm","TasksTable","TasksList_styles_templateObject","TasksList","onDragEnd","result","destination","source","droppableId","TasksList_SectionTitle","droppableProps","TasksList_Task","placeholder","lowPriorityTasks","_ref7","mediumPriorityTasks","_ref8","highPriorityTasks","_ref9","tasksDescendingOrder","_ref10","Routes","react_router","path","Settings","styles","GlobalStyle_templateObject","GlobalStyle","core_browser_esm","App","es","integration_react","react_router_dom","utils_ThemeProvider","src_routes","src_GlobalStyle","document","getElementById","src_App"],"mappings":"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","file":"static/js/main.c980cf16.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/more.6b7c2156.svg\";","module.exports = __webpack_public_path__ + \"static/media/two-rows-and-three-columns-layout.956b42da.svg\";","module.exports = __webpack_public_path__ + \"static/media/three-rows-layout-content-structure-design.99163dfa.svg\";","export const initialState = {\n  tasks: [\n    {\n      id: 1,\n      name: 'Clean the room',\n      description: 'mother said to clean the room',\n      creationDate: 1563794051983,\n      isCompleted: false,\n      priority: 'High',\n      badgeColor: '#ba68c8',\n    },\n    {\n      id: 2,\n      name: 'Learn JS',\n      description: 'Learn vanilla JS on CodeAcademy',\n      creationDate: 1563734451983,\n      isCompleted: false,\n      priority: 'Medium',\n      badgeColor: '#ba68c8',\n    },\n    {\n      id: 3,\n      name: 'Learn React',\n      description: 'Learn React from documentation',\n      creationDate: 1563494451983,\n      isCompleted: false,\n      priority: 'Low',\n      badgeColor: '#ba68c8',\n    },\n    {\n      id: 4,\n      name: 'Learn Css',\n      description: 'Learn how to use CSS Grid',\n      creationDate: 1563793451983,\n      isCompleted: true,\n      priority: 'High',\n      badgeColor: '#ba68c8',\n    },\n    {\n      id: 5,\n      name: 'Learn Css',\n      description: 'Learn how to use CSS Grid',\n      creationDate: 1563792451983,\n      isCompleted: true,\n      priority: 'High',\n      badgeColor: '#ba68c8',\n    },\n    {\n      id: 6,\n      name: 'Learn Css',\n      description: 'Learn how to use CSS Grid',\n      creationDate: 1563794411983,\n      isCompleted: true,\n      priority: 'High',\n      badgeColor: '#ba68c8',\n    },\n  ],\n  prioritySortType: 'All',\n  dateSortType: 'ASC',\n  isLoading: false,\n  error: '',\n  colorScheme: 'light',\n  viewType: 'column',\n}\n\nexport const tasksSelector = ({ tasksList }) => tasksList.tasks\n\nexport const viewTypeSelector = ({tasksList}) => tasksList.viewType\n\nexport const dateSortType = ({ tasksList }) => tasksList.dateSortType\n\nexport const colorSchemeSelector = ({tasksList}) => tasksList.colorScheme\n\nexport const sortByDateSelector = ({ tasksList }) =>\n  tasksList.tasks.sort((a, b) =>\n    tasksList.dateSortType === 'ASC'\n      ? a.creationDate - b.creationDate\n      : b.creationDate - a.creationDate,\n  )\n\nexport const prioritySelector = ({ tasksList }) => tasksList.prioritySortType\n\nexport const prioritySortSelector = state => {\n  const tasks = sortByDateSelector(state)\n  const priority = prioritySelector(state)\n\n  switch (priority) {\n    case 'All':\n      return tasks.filter(task => !task.isCompleted)\n    case 'Low':\n      return tasks.filter(task => task.priority === 'Low' && !task.isCompleted)\n    case 'Medium':\n      return tasks.filter(task => task.priority === 'Medium' && !task.isCompleted)\n    case 'High':\n      return tasks.filter(task => task.priority === 'High' && !task.isCompleted)\n    default:\n      break\n  }\n}\n\nexport const lowPriorityTasksSelector = ({ tasksList }) =>\n  tasksList.tasks.filter(task => task.priority === 'Low' && !task.isCompleted)\n\nexport const mediumPriorityTasksSelector = ({ tasksList }) =>\n  tasksList.tasks.filter(task => task.priority === 'Medium' && !task.isCompleted)\n\nexport const highPriorityTasksSelector = ({ tasksList }) =>\n  tasksList.tasks.filter(task => task.priority === 'High' && !task.isCompleted)\n\nexport const sortedByDateTasksDescendingSelector = ({ tasksList }) =>\n  tasksList.tasks.sort((a, b) => b.creationDate - a.creationDate)\n\nexport const isLoadingsSelector = ({ tasksList }) => tasksList.isLoading\nexport const errorSelector = ({ tasksList }) => tasksList.error\n","import React from 'react'\nimport { ThemeProvider as SCThemeProvider } from 'styled-components'\nimport * as selectors from 'store/tasksList/selectors'\nimport { connect } from 'react-redux'\n\nconst ThemeProvider = ({ children, colorScheme }) => (\n  <SCThemeProvider theme={{ mode: colorScheme }}>\n    {children}\n  </SCThemeProvider>\n)\n\nconst mapStateToProps = state => {\n  return {\n    colorScheme: selectors.colorSchemeSelector(state),\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  null,\n)(ThemeProvider)\n","// tasks\nexport const ADD_TASK_REQUEST = 'ADD_TASK_REQUEST'\nexport const ADD_TASK_SUCCESS = 'ADD_TASK_SUCCESS'\nexport const ADD_TASK_FAILURE = 'ADD_TASK_FAILURE'\n\nexport const DELETE_TASK_REQUEST = 'DELETE_TASK_REQUEST'\nexport const DELETE_TASK_SUCCESS = 'DELETE_TASK_SUCCESS'\nexport const DELETE_TASK_FAILURE = 'DELETE_TASK_FAILURE'\n\nexport const COMPLETE_TASK_REQUEST = 'COMPLETE_TASK_REQUEST'\nexport const COMPLETE_TASK_SUCCESS = 'COMPLETE_TASK_SUCCESS'\nexport const COMPLETE_TASK_FAILURE = 'COMPLETE_TASK_FAILURE'\n\nexport const EDIT_TASK_REQUEST = 'EDIT_TASK_REQUEST'\nexport const EDIT_TASK_SUCCESS = 'EDIT_TASK_SUCCESS'\nexport const EDIT_TASK_FAILURE = 'EDIT_TASK_FAILURE'\n\nexport const SET_PRIORITY_SORT_TYPE = 'SET_PRIORITY_SORT_TYPE'\nexport const SET_DATE_SORT_TYPE = 'SET_DATE_SORT_TYPE'\nexport const SET_COLOR_SCHEME = 'SET_COLOR_SCHEME'\nexport const SET_VIEW_TYPE = 'SET_VIEW_TYPE'\n\n//  tasks action creators\nexport const addTaskRequest = () => ({\n  type: ADD_TASK_REQUEST,\n})\n\nexport const addTaskSuccess = newTask => ({\n  type: ADD_TASK_SUCCESS,\n  payload: { newTask },\n})\n\nexport const addTaskFailure = error => ({\n  type: ADD_TASK_FAILURE,\n  payload: { error },\n})\n\nexport const deleteTaskRequest = () => ({\n  type: DELETE_TASK_REQUEST,\n})\n\nexport const deleteTaskSuccess = id => ({\n  type: DELETE_TASK_SUCCESS,\n  payload: { id },\n})\n\nexport const deleteTaskFailure = error => ({\n  type: DELETE_TASK_FAILURE,\n  payload: { error },\n})\n\nexport const completeTaskRequest = () => ({\n  type: COMPLETE_TASK_REQUEST,\n})\n\nexport const completeTaskSuccess = id => ({\n  type: COMPLETE_TASK_SUCCESS,\n  payload: { id },\n})\n\nexport const completeTaskFailure = error => ({\n  type: COMPLETE_TASK_FAILURE,\n  payload: { error },\n})\n\nexport const editTaskRequest = () => ({\n  type: EDIT_TASK_REQUEST,\n})\n\nexport const editTaskSuccess = ({ id, name, description, priority, badgeColor }) => ({\n  type: EDIT_TASK_SUCCESS,\n  payload: { id, name, description, priority, badgeColor },\n})\n\nexport const editTaskFailure = error => ({\n  type: EDIT_TASK_FAILURE,\n  payload: { error },\n})\n\nexport const setPrioritySortType = priorityType => ({\n  type: SET_PRIORITY_SORT_TYPE,\n  payload: { priorityType },\n})\n\nexport const setDateSortType = () => ({\n  type: SET_DATE_SORT_TYPE,\n})\n\nexport const setColorScheme = colorSchemeType => ({\n  type: SET_COLOR_SCHEME,\n  payload: { colorSchemeType },\n})\n\nexport const setViewType = viewType => ({\n  type: SET_VIEW_TYPE,\n  payload: { viewType },\n})\n","import { persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport tasksList from './tasksList/reducer'\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n}\n\nconst rootReducer = {\n  tasksList: persistReducer(persistConfig, tasksList),\n}\n\nexport default rootReducer\n","import { initialState } from './selectors'\nimport * as actions from './actions'\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case actions.ADD_TASK_REQUEST:\n      return {\n        ...state,\n        isLoading: true,\n      }\n    case actions.ADD_TASK_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        tasks: [...state.tasks, payload.newTask],\n      }\n    case actions.ADD_TASK_FAILURE:\n      return {\n        ...state,\n        isLoading: false,\n        error: payload.error,\n      }\n    case actions.DELETE_TASK_REQUEST:\n      return {\n        ...state,\n        isLoading: true,\n      }\n    case actions.DELETE_TASK_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        tasks: state.tasks.filter(task => task.id !== +payload.id),\n      }\n    case actions.DELETE_TASK_FAILURE:\n      return {\n        ...state,\n        isLoading: false,\n        error: payload.error,\n      }\n    case actions.COMPLETE_TASK_REQUEST:\n      return {\n        ...state,\n        isLoading: true,\n      }\n    case actions.COMPLETE_TASK_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        tasks: state.tasks.map(task =>\n          task.id === +payload.id ? { ...task, isCompleted: !task.isCompleted } : task,\n        ),\n      }\n    case actions.COMPLETE_TASK_FAILURE:\n      return {\n        ...state,\n        isLoading: false,\n        error: payload.error,\n      }\n    case actions.EDIT_TASK_REQUEST:\n      return {\n        ...state,\n        isLoading: true,\n      }\n    case actions.EDIT_TASK_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        tasks: state.tasks.map(task =>\n          task.id === +payload.id\n            ? {\n                ...task,\n                name: payload.name,\n                description: payload.description,\n                priority: payload.priority,\n                badgeColor: payload.badgeColor\n              }\n            : task,\n        ),\n      }\n    case actions.EDIT_TASK_FAILURE:\n      return {\n        ...state,\n        isLoading: false,\n        error: payload.error,\n      }\n    case actions.SET_PRIORITY_SORT_TYPE:\n      return {\n        ...state,\n        prioritySortType: payload.priorityType\n      }\n    case actions.SET_DATE_SORT_TYPE:\n      return {\n        ...state,\n        dateSortType: state.dateSortType === 'ASC' ? 'DESC' : 'ASC'\n      }\n    case actions.SET_COLOR_SCHEME:\n      return {\n        ...state,\n        colorScheme: payload.colorSchemeType\n      }\n    case actions.SET_VIEW_TYPE:\n      return {\n        ...state,\n        viewType: payload.viewType\n      }\n    default:\n      return state\n  }\n}\n","import { createStore, applyMiddleware, combineReducers, compose } from 'redux'\nimport { connectRouter, routerMiddleware as useRouterMiddleware } from 'connected-react-router'\nimport { createBrowserHistory } from 'history'\nimport { persistStore } from 'redux-persist'\nimport thunk from 'redux-thunk'\nimport rootReducer from './reducer'\n\nconst history = createBrowserHistory()\nconst routerMiddleware = useRouterMiddleware(history)\nconst reducer = combineReducers({\n  ...rootReducer,\n  router: connectRouter(history),\n})\n\nconst initialState = {}\nconst enhancers = []\nconst middleware = [routerMiddleware, thunk]\n\nif (process.env.NODE_ENV === 'development') {\n  const devToolsExtension = window.devToolsExtension // eslint-disable-line  prefer-destructuring\n  const { createLogger } = require('redux-logger') // eslint-disable-line global-require\n  const logger = createLogger()\n\n  if (typeof devToolsExtension === 'function') {\n    enhancers.push(devToolsExtension())\n  }\n\n  middleware.push(logger)\n}\n\nconst composedEnhancers = compose(\n  applyMiddleware(...middleware),\n  ...enhancers,\n)\n\nconst store = createStore(reducer, initialState, composedEnhancers)\n\nconst persistor = persistStore(store)\n\nexport { history, persistor }\n\nexport default store\n","const routes = {\n  root: '/',\n  setting: '/settings'\n}\n\nexport default routes\n","import styled from 'styled-components'\nimport ReactSVG from 'react-svg'\nimport { NavLink } from 'react-router-dom'\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 70px;\n  height: 100%;\n  background-color: #0d1934;\n  position: fixed;\n  \n  svg {\n  width: 40px;\n  height: 40px;\n  }\n`\n\nexport const Logo = styled(ReactSVG)`\n  margin: 9px auto;\n`\n\nexport const Menu = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nexport const Item = styled(NavLink)`\n  width: 100%;\n  height: 50px;\n  color: #fff;\n  font-size: 14px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-left: 4px solid transparent;\n  border-right: 4px solid transparent;\n  \n  svg{\n  width: 20px;\n  height: 20px;\n  }\n  \n  &.active{\n  transition: background-color 0.5s ease;\n  background-color: #122143;\n  border-left: 4px solid #4773df;\n  }\n`\n","import React from 'react'\nimport ReactSVG from 'react-svg'\nimport logo from 'assets/to-do-list.svg'\nimport home from 'assets/home.svg'\nimport settings from 'assets/settings.svg'\nimport * as S from './styles'\n\nconst Sidebar = () =>{\n  return (\n    <S.Container>\n        <S.Logo src={logo}/>\n      <S.Menu>\n        <S.Item exact to='/'>\n          <ReactSVG src={home}/>\n        </S.Item>\n        <S.Item to='/settings'>\n          <ReactSVG src={settings}/>\n        </S.Item>\n      </S.Menu>\n    </S.Container>\n  )\n}\n\nexport default Sidebar\n","import theme from 'styled-theming'\n\nexport const backgroundColor = theme('mode', {\n  light: '#f6f7fa',\n  dark: '#0d1934'\n});\n\nexport const mainTextColor = theme('mode',{\n  light: '#212121',\n  dark: '#fafafa'\n})\n\nexport const taskBorderColor = theme('mode',{\n  light: '#eceef3',\n  dark: '#9e9e9e'\n})\n\nexport const mainButtonColor = theme('mode', {\n  light: '#1da1f3',\n  dark: '#1da1f3'\n})\n\n","import styled from 'styled-components'\nimport { backgroundColor, mainButtonColor, mainTextColor } from 'config/theme'\nimport photo from 'assets/spiderman.jpg'\n\nexport const Header = styled.div`\n  height: 64px;\n  display: flex;\n  position: fixed;\n  align-items: center;\n  padding: 10px 20px;\n  width: calc(100% - 60px);\n  box-shadow: 0 4px 4px rgba(0, 0, 0, 0.1);\n  background-color: ${backgroundColor};\n  z-index: 4;\n`\nexport const Hamburger = styled.div`\n  position: relative;\n  z-index: 1;\n  display: block;\n`\n\nexport const HamburgerBar = styled.div`\n  width: 20px;\n  height: 3px;\n  background-color: ${mainTextColor};\n  margin: 5px 0;\n  transition: 0.3s;\n`\n\nexport const ButtonsContainer = styled.div`\n  margin-left: auto;\n  margin-right: 20px;\n  display: flex;\n  align-items: center;\n`\n\nexport const Sort = styled.div`\n  margin-right: 15px;\n  font-size: 18px;\n  font-weight: 700;\n  padding-top: 5px;\n`\n\nexport const Button = styled.button`\n  border-radius: 30px;\n  background-color: ${mainButtonColor};\n  color: #fff;\n  font-size: 13px;\n  font-weight: 700;\n  width: 130px;\n  height: 40px;\n  margin-right: 15px;\n  border: none;\n  \n  :hover{\n  opacity: 0.9;\n  }\n`\n\nexport const UserPhoto = styled.div`\n  width: 40px;\n  height: 40px;\n  background-image: url(${photo});\n  background-size: cover;\n  top: 50%;\n  left: 50%;\n  border-radius: 50%; \n`\n","import * as actions from './actions'\n\nexport const addTask = (newTask) => async dispatch => {\n  dispatch(actions.addTaskRequest())\n  try {\n    dispatch(actions.addTaskSuccess(newTask))\n  } catch (e) {\n    dispatch(actions.addTaskFailure(e))\n    console.log(e);\n  }\n}\n\nexport const deleteTask = (id) => async dispatch => {\n  dispatch(actions.deleteTaskRequest())\n  try {\n    dispatch(actions.deleteTaskSuccess(id))\n  } catch (e) {\n    dispatch(actions.deleteTaskFailure(e))\n    console.log(e);\n  }\n}\n\nexport const completeTask = (id) => async dispatch => {\n  dispatch(actions.completeTaskRequest())\n  try {\n    dispatch(actions.completeTaskSuccess(id))\n  } catch (e) {\n    dispatch(actions.completeTaskFailure(e))\n    console.log(e);\n  }\n}\n\nexport const editTask = (info) => async dispatch => {\n  dispatch(actions.editTaskRequest())\n  try {\n    dispatch(actions.editTaskSuccess(info))\n  } catch (e) {\n    dispatch(actions.editTaskFailure(e))\n    console.log(e);\n  }\n}\n\n\n","import styled, { css } from 'styled-components'\nimport { backgroundColor, mainTextColor, taskBorderColor } from 'config/theme'\nimport { Field } from 'react-final-form'\n\nconst btn = (light, dark) => css`\n  white-space: nowrap;\n  display: inline-block;\n  border-radius: 5px;\n  padding: 5px 15px;\n  font-size: 16px;\n  color: white;\n  &:visited {\n    color: white;\n  }\n  background-image: linear-gradient(${light}, ${dark});\n  border: 1px solid ${dark};\n  &:hover {\n    background-image: linear-gradient(${light}, ${dark});\n    &[disabled] {\n      background-image: linear-gradient(${light}, ${dark});\n    }\n  }\n  &:visited {\n    color: black;\n  }\n  &[disabled] {\n    opacity: 0.6;\n    cursor: not-allowed;\n  }\n`\n\nconst btnDefault = css`\n  ${btn('#ffffff', '#d5d5d5')} color: #555;\n`\n\nconst btnPrimary = btn('#4f93ce', '#285f8f')\n\nexport default styled.div`\n  font-family: sans-serif;\n\n  h1 {\n    text-align: center;\n    color: #222;\n  }\n\n  & > div {\n    text-align: center;\n  }\n\n  a {\n    display: block;\n    text-align: center;\n    color: #222;\n  }\n\n  form {\n    max-width: 500px;\n    margin: 10px auto;\n    border: 1px solid #ccc;\n    padding: 20px;\n    box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.3);\n    border-radius: 3px;\n\n    & > div {\n      display: flex;\n      flex-flow: row nowrap;\n      line-height: 2em;\n      margin: 5px;\n      & > label {\n        color: #333;\n        width: 110px;\n        font-size: 1em;\n        line-height: 32px;\n      }\n      & > input,\n      & > select,\n      & > textarea {\n        flex: 1;\n        padding: 3px 5px;\n        font-size: 1em;\n        margin-left: 15px;\n        border: 1px solid #ccc;\n        border-radius: 3px;\n      }\n      & > input[type='checkbox'] {\n        margin-top: 7px;\n      }\n      & > div {\n        margin-left: 16px;\n        & > label {\n          display: block;\n          & > input {\n            margin-right: 3px;\n          }\n        }\n      }\n    }\n    & > .buttons {\n      display: flex;\n      flex-flow: row nowrap;\n      justify-content: center;\n      margin-top: 15px;\n    }\n    button {\n      margin: 0 10px;\n      &[type='submit'] {\n        ${btnPrimary};\n      }\n      &[type='button'] {\n        ${btnDefault};\n      }\n    }\n    pre {\n      border: 1px solid #ccc;\n      background: rgba(0, 0, 0, 0.1);\n      box-shadow: inset 1px 1px 3px rgba(0, 0, 0, 0.2);\n      padding: 20px;\n    }\n  }\n`\n\nexport const FormContainer = styled.div`\n  background-color: ${backgroundColor};\n  border: 1px solid ${taskBorderColor};\n  display: flex;\n  flex-direction: column;\n  position: fixed;\n  width: 430px;\n  height: 300px;;\n  top: 10%;\n  left: 35%;\n  box-shadow: 0 0 10px rgba(0,0,0,0.2);\n  padding: 20px;\n  border-radius: 5px;\n  z-index: 2;\n`\n\nexport const Header = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 10px;\n`\n\nexport const ExitButton = styled.button`\n  border: none;\n  background-color: transparent;\n  font-size: 25px;\n  margin-left: auto;\n  color: ${mainTextColor};\n`\n\nexport const Title = styled.div`\n  font-weight: bold;\n  font-size: 20px;\n  color: ${mainTextColor};\n`\n\nexport const TaskName = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n  color: ${mainTextColor};\n`\n\nexport const Button = styled.button`\n  border-radius: 15px;\n  background-color: #5584ff;\n  color: #fff;\n  font-size: 12px;\n  font-weight: 700;\n  width: 100px;\n  height: 30px;\n  margin-right: 15px;\n  border: 2px solid #5584ff;\n`\n\nexport const RadioButtonsContainer = styled.div`\n  display: flex;\n  margin-bottom: 10px;\n`\n\nexport const RadioButtonsLabel = styled.label`\n  margin-right: 10px;\n  color: ${mainTextColor};\n`\n\nexport const RadioButtonsItem = styled.label`\n  margin-right: 10px;\n    color:  ${props => { switch (props.priority) {\n  case 'High':\n    return '#f45d22'\n  case 'Medium':\n    return '#e0245e'\n  case 'Low':\n    return '#794bc4'\n  default:\n    return '#212121'\n}}};\n`\n\nexport const FieldInput = styled(Field)`\n  color: black;\n`\n\n","import React from 'react'\nimport * as S from '../styles'\n\nconst TitleInput = () => (\n  <S.TaskName>\n    <label>Title</label>\n    <S.FieldInput name=\"name\" component=\"input\" type=\"text\" required />\n  </S.TaskName>\n)\n\nexport default TitleInput\n","import React from 'react'\nimport * as S from '../styles'\n\nconst DescriptionTextArea = () => (\n  <S.TaskName>\n    <label>Description</label>\n    <S.FieldInput name=\"description\" component=\"textarea\" required />\n  </S.TaskName>\n)\n\nexport default DescriptionTextArea\n","import React from 'react'\nimport { Field } from 'react-final-form'\nimport * as S from '../styles'\n\nconst PriorityRadioButtons = () => (\n  <S.RadioButtonsContainer>\n    <S.RadioButtonsLabel>Priority</S.RadioButtonsLabel>\n    <div>\n      <S.RadioButtonsItem priority='Low'>\n        <Field name=\"priority\" component=\"input\" type=\"radio\" value=\"Low\" required /> Low\n      </S.RadioButtonsItem>\n      <S.RadioButtonsItem priority='Medium'>\n        <Field name=\"priority\" component=\"input\" type=\"radio\" value=\"Medium\" required /> Medium\n      </S.RadioButtonsItem>\n      <S.RadioButtonsItem priority='High'>\n        <Field name=\"priority\" component=\"input\" type=\"radio\" value=\"High\" required /> High\n      </S.RadioButtonsItem>\n    </div>\n  </S.RadioButtonsContainer>\n)\n\nexport default PriorityRadioButtons\n","import React from 'react'\nimport { Field } from 'react-final-form'\nimport * as S from '../styles'\n\nconst ColorsRadioButtons = () => (\n  <S.RadioButtonsContainer>\n    <S.RadioButtonsLabel>Select Color</S.RadioButtonsLabel>\n    <Field name=\"badgeColor\" component=\"select\">\n      <option />\n      <option value=\"#1da1f2\">💙 Blue</option>\n      <option value=\"#ffad1f\">💛 Yellow</option>\n      <option value=\"#e0245e\">💗 Pink</option>\n      <option value=\"#e0245e\">💜 Purple</option>\n      <option value=\"#f45d22\">🧡 Orange</option>\n      <option value=\"#17bf63\">💚 Green</option>\n    </Field>\n  </S.RadioButtonsContainer>\n)\n\nexport default ColorsRadioButtons\n","import React from 'react'\nimport { Form } from 'react-final-form'\nimport * as selectors from 'store/tasksList/selectors'\nimport * as actions from 'store/tasksList/thunk'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport * as S from './styles'\nimport TitleInput from './FormItems/titleInput'\nimport DescriptionTextArea from './FormItems/decsriptionTextArea'\nimport PriorityRadioButtons from './FormItems/priorityRadioButtons'\nimport ColorsRadioButtons from './FormItems/colorsRadioButtons'\n\nclass AddTaskForm extends React.Component {\n  onSubmit = values => {\n    const {\n      tasks,\n      exitForm,\n      formType,\n      taskId,\n      actions: { addTask, editTask },\n    } = this.props\n    if (formType === 'createTask') {\n      const id = tasks.reduce((max, task) => (task.id > max ? task.id : max), tasks[0].id) + 1\n\n      if (!values.badgeColor) {\n        values.badgeColor = '#ba68c8'\n      }\n\n      const creationDate = Date.now()\n      const newTask = { ...values, id, creationDate, isCompleted: false }\n      addTask(newTask)\n    } else if (formType === 'editTask') {\n      editTask({ ...values, id: taskId })\n    }\n\n    exitForm()\n  }\n\n  render() {\n    const { exitForm, formName, initialValues, formType } = this.props\n    return (\n      <S.FormContainer>\n        <S.Header>\n          <S.Title>{formName}</S.Title>\n          <S.ExitButton onClick={exitForm}>✖</S.ExitButton>\n        </S.Header>\n        <Form\n          onSubmit={this.onSubmit}\n          initialValues={initialValues}\n          render={({ handleSubmit, submitting, pristine }) => (\n            <form onSubmit={handleSubmit}>\n              <TitleInput />\n              <DescriptionTextArea />\n              <PriorityRadioButtons />\n              <ColorsRadioButtons />\n              <S.Button type=\"submit\" disabled={submitting || pristine}>\n                {formType === 'createTask' ? 'Add task' : 'Save changes'}\n              </S.Button>\n            </form>\n          )}\n        />\n      </S.FormContainer>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    tasks: selectors.tasksSelector(state),\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(\n    {\n      addTask: actions.addTask,\n      editTask: actions.editTask,\n    },\n    dispatch,\n  ),\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(AddTaskForm)\n","import React from 'react'\nimport * as S from './styles'\nimport AddTaskForm from './AddEditTaskForm'\n\nclass Header extends React.Component {\n  state = {\n    addTaskWindow: false,\n  }\n\n  openAddTaskWindow = () => {\n    this.setState({ addTaskWindow: true })\n  }\n\n  closeAddTaskWindow = () => {\n    this.setState({ addTaskWindow: false })\n  }\n\n  render() {\n    const { addTaskWindow } = this.state\n    return (\n      <S.Header>\n        {addTaskWindow && (\n          <AddTaskForm\n            exitForm={this.closeAddTaskWindow}\n            formName=\"Create new task\"\n            formType=\"createTask\"\n          />\n        )}\n        <S.Hamburger>\n          <S.HamburgerBar />\n          <S.HamburgerBar />\n          <S.HamburgerBar />\n        </S.Hamburger>\n        <S.ButtonsContainer>\n          <S.Button onClick={this.openAddTaskWindow}>Add new task</S.Button>\n          <S.UserPhoto />\n        </S.ButtonsContainer>\n      </S.Header>\n    )\n  }\n}\n\nexport default Header\n","import styled from 'styled-components'\nimport { backgroundColor } from 'config/theme'\n\nexport const Container = styled.div`\n  display: flex;\n`\n\nexport const Area = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-width: 380px;\n  height: 100%;\n  width: 100%;\n  margin-left: 70px;\n`\n\nexport const Content = styled.div`\n  margin-top: 64px;\n  min-height: 740px;\n  width: 100%;\n  background-color: ${backgroundColor};\n  padding: 15px 35px;\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n`\n","import React from 'react'\nimport Sidebar from 'pages/Template/SideBar'\nimport Header from 'pages/Template/Header'\nimport * as S from './styles'\n\nconst Template = ({ children }) => (\n  <S.Container>\n    <Sidebar/>\n    <S.Area>\n      <Header/>\n      <S.Content>\n        {children}\n      </S.Content>\n    </S.Area>\n  </S.Container>\n)\n\n\nexport default Template\n","import styled from 'styled-components'\nimport { mainButtonColor, mainTextColor } from 'config/theme'\n\nexport const Title = styled.div`\n  font-size: 27px;\n  font-weight: 700;\n  margin-right: 10px;\n  margin-bottom: 10px;\n  color: ${mainTextColor};\n`\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nexport const SettingName = styled.div`\n  color: ${mainTextColor};\n  margin-right: 10px;\n`\n\nexport const ColorsForm = styled.form`\n  display: flex;\n  align-items: center;\n`\n\nexport const ColorsLabel = styled.label`\n  color: ${mainTextColor};\n  margin-right: 10px;\n`\n\nexport const ColorsButton = styled.button`\n    border-radius: 30px;\n    background-color: ${mainButtonColor};\n    color: #fff;\n    font-size: 13px;\n    font-weight: 700;\n    width: 110px;\n    height: 25px;\n    margin-right: 15px;\n    border: none;\n`\n","import React from 'react'\nimport { Field, Form } from 'react-final-form'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport Template from '../Template'\nimport * as S from './styles'\nimport * as selectors from '../../store/tasksList/selectors'\nimport * as actions from '../../store/tasksList/actions'\n\nconst Settings = ({actions: {changeColorScheme}, colorScheme}) =>{\n  const onSubmit = ({colorScheme}) =>{\n    changeColorScheme(colorScheme);\n  }\n\n  return(\n    <Template>\n      <S.Title>Settings</S.Title>\n      <S.Container>\n        <S.SettingName>Change color scheme</S.SettingName>\n        <Form\n          onSubmit={onSubmit}\n          initialValues={{colorScheme: colorScheme}}\n          render={({ handleSubmit, submitting, pristine }) => (\n            <S.ColorsForm onSubmit={handleSubmit}>\n              <div>\n                <div>\n                  <S.ColorsLabel>\n                    <Field name=\"colorScheme\" component=\"input\" type=\"radio\" value=\"light\" required />{' '}\n                    Light\n                  </S.ColorsLabel>\n                  <S.ColorsLabel>\n                    <Field name=\"colorScheme\" component=\"input\" type=\"radio\" value=\"dark\" required />{' '}\n                    Dark\n                  </S.ColorsLabel>\n                </div>\n              </div>\n              <div className=\"buttons\">\n                <S.ColorsButton type=\"submit\" disabled={submitting || pristine}>\n                  Change color\n                </S.ColorsButton>\n              </div>\n            </S.ColorsForm>\n          )}\n        />\n      </S.Container>\n    </Template>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    colorScheme: selectors.colorSchemeSelector(state),\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(\n    {\n      changeColorScheme: actions.setColorScheme\n    },\n    dispatch,\n  ),\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Settings)\n","import styled from 'styled-components'\n\nexport const Container = styled.div`\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  background-color: ${(props)=> props.badgeColor};\n  display: flex;\n  align-self: center;\n  align-items: center;\n  justify-content: center;\n  margin-right: 20px;\n`\n\nexport const Letter = styled.div`\n  color: #fff;\n  font-size: 25px;\n`\n","import React from 'react'\nimport * as S from './styles'\n\nconst Badge = ({name, badgeColor}) => {\n  return (\n    <S.Container badgeColor={badgeColor}>\n      <S.Letter>{name[0].toUpperCase()}</S.Letter>\n    </S.Container>\n    )\n}\n\nexport default Badge\n\n\n","import styled from 'styled-components'\nimport { mainTextColor } from 'config/theme'\nimport Moment from 'react-moment'\n\nexport const Container = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: flex-end;\n  align-items: center;\n  justify-self: flex-end;\n`\n\nexport const Priority = styled.div`\n  margin-right: 10px;\n  font-weight: 700;\n  font-size: 12px;\n  color:  ${props => { switch (props.priority) {\n  case 'High':\n    return '#f45d22'\n  case 'Medium':\n    return '#e0245e'\n  case 'Low': \n    return '#794bc4'\n  default:\n    return '#212121'\n}}};\n`\n\nexport const CompleteStatus = styled.div`\n  margin-right: 10px;\n  font-weight: 700;\n  font-size: 12px;\n  color: #17bf63;\n`\n\nexport const CreationDate = styled(Moment)`\n  color: ${mainTextColor};\n  font-size: 12px;\n  opacity: 0.8;\n`\n","import React from 'react'\nimport * as S from './styles'\n\n\nconst AdditionalInfo = ({isCompleted, priority, creationDate}) => {\n  return (\n    <>\n      {isCompleted ? (\n        <S.Container>\n          <S.CompleteStatus>Completed</S.CompleteStatus>\n        </S.Container>\n      ) : (\n        <S.Container>\n          <S.Priority priority={priority} >{priority} Priority</S.Priority>\n          <S.CreationDate format=\"LLL\">{creationDate}</S.CreationDate>\n        </S.Container>\n      )}\n    </>\n  )\n}\n\nexport default AdditionalInfo\n","import styled from 'styled-components'\nimport { backgroundColor, mainButtonColor, mainTextColor, taskBorderColor } from 'config/theme'\n\nexport const Container = styled.div`\n  display: flex;\n  width: 100%;\n`\n\nexport const Name = styled.div`\n  font-weight: 700;\n  margin-bottom: 5px;\n  color: ${mainTextColor};\n  opacity: 0.9;\n`\n\nexport const Description = styled.div`\n  margin-bottom: 5px;\n  color: #8d919c;\n  opacity: 0.8;\n  font-size: 14px;\n`\n\nexport const EditTaskContainer = styled.div`\n  margin-left: auto;\n  display: flex;\n  position: relative;\n`\n\nexport const MoreContainer = styled.div` \n  align-items: center;\n  justify-content: center;\n  margin-top: 10px;\n  border: none;\n  background-color: transparent;\n  padding-top: 10px;\n  cursor: pointer;\n  \n  svg {\n  width: 25px;\n  height: 25px;\n  }\n`\n\nexport const EditTask = styled.div`\n  margin-left: auto;\n  padding: 10px;\n  width: 150px;\n  background-color: ${backgroundColor};\n  border: 1px solid ${taskBorderColor};\n  top: 40%;\n  left: -570%;\n  box-shadow: 0 0 2px rgba(0,0,0,0.3);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  position: absolute;\n  z-index: 2;\n`\n\nexport const EditTaskButton = styled.button`\n  font-size: 12px;\n  margin-bottom: 5px;\n  border: none;\n  width: 120px;\n  background-color: ${mainButtonColor};\n  color: #fff;\n`\n","import ReactSVG from 'react-svg'\nimport React from 'react'\nimport * as actions from 'store/tasksList/thunk'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport more from 'assets/more.svg'\nimport AddTaskForm from 'pages/Template/Header/AddEditTaskForm'\nimport OutsideClickHandler from 'react-outside-click-handler/esm/OutsideClickHandler'\nimport * as S from './styles'\n\n\nclass MainInfo extends React.Component {\n  state = {\n    taskSettings: false,\n    editTask: false,\n  }\n\n  openCloseTaskSettings = () => {\n    this.setState(({ taskSettings }) => ({ taskSettings: !taskSettings }))\n  }\n\n  openCloseTaskEditor = () => {\n    this.setState(({ editTask }) => ({ editTask: !editTask }))\n    this.setState({ taskSettings: false })\n  }\n\n  deleteTask = e => {\n    const { actions: {deleteTask} } = this.props\n    deleteTask(e.currentTarget.id)\n    this.openCloseTaskSettings()\n  }\n\n  completeTask = e => {\n    const { actions: {completeTask} } = this.props\n    completeTask(e.currentTarget.id)\n    this.openCloseTaskSettings()\n  }\n\n  render() {\n    const { name, description, isCompleted, id, priority } = this.props\n    const { taskSettings, editTask } = this.state\n    return (\n      <S.Container>\n        <div>\n          <S.Name>{name}</S.Name>\n          <S.Description>{description}</S.Description>\n        </div>\n        <S.EditTaskContainer>\n          {taskSettings && (\n            <OutsideClickHandler\n              disabled = {!taskSettings}\n              onOutsideClick={() => this.openCloseTaskSettings()}\n            >\n            <S.EditTask>\n              {!isCompleted && (\n                <S.EditTaskButton onClick={this.openCloseTaskEditor}>Edit task</S.EditTaskButton>\n              )}\n              <S.EditTaskButton id={id} onClick={e => this.completeTask(e)}>\n                {isCompleted ? 'Mark as uncompleted' : 'Mark as completed'}\n              </S.EditTaskButton>\n              <S.EditTaskButton id={id} onClick={e => this.deleteTask(e)}>\n                Delete\n              </S.EditTaskButton>\n            </S.EditTask>\n            </OutsideClickHandler>\n          )}\n          {editTask && (\n            <AddTaskForm\n              formName='Edit task'\n              exitForm={this.openCloseTaskEditor}\n              formType='editTask'\n              taskId={id}\n              initialValues={{ name, description, priority }}\n            />\n          )}\n          <S.MoreContainer onClick={this.openCloseTaskSettings}>\n            <ReactSVG src={more} />\n          </S.MoreContainer>\n        </S.EditTaskContainer>\n      </S.Container>\n    )\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(\n    {\n      deleteTask: actions.deleteTask,\n      completeTask: actions.completeTask,\n    },\n    dispatch,\n  ),\n})\n\nexport default connect(\n  null,\n  mapDispatchToProps,\n)(MainInfo)\n","import styled from 'styled-components'\nimport { backgroundColor, taskBorderColor } from 'config/theme'\n\nexport const Container = styled.div`\n  min-width: 270px;\n  width: ${({viewType}) => viewType === 'column' ? '100%' : '32%'};\n  background-color: ${backgroundColor};\n  border: 1px solid ${taskBorderColor};\n  min-height: 100px;\n  padding: 5px 10px;\n  margin-bottom: 5px;\n  display: flex;\n  margin-right: 10px;\n`\n\nexport const TaskBody = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`\n\n\n\n\n","import React from 'react'\nimport Badge from './Badge'\nimport AdditionalInfo from './AdditionalInfo'\nimport MainInfo from './MainInfo'\nimport { Draggable } from 'react-beautiful-dnd'\nimport * as S from './styles'\n\nconst Task = ({ task, index, viewType }) => {\n  const { name, description, creationDate, isCompleted, priority, id, badgeColor } = task\n  return (\n    <Draggable draggableId={id} index={index}>\n      {(provided)=>(\n        <S.Container\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          ref={provided.innerRef}\n          viewType={viewType}\n        >\n          <Badge name={name} badgeColor={badgeColor}/>\n          <S.TaskBody>\n            <AdditionalInfo isCompleted={isCompleted} priority={priority} creationDate={creationDate} />\n            <MainInfo\n              name={name}\n              description={description}\n              isCompleted={isCompleted}\n              id={id}\n              priority={priority}\n            />\n          </S.TaskBody>\n        </S.Container>\n      )}\n    </Draggable>\n  )\n}\n\nexport default Task\n","import styled from 'styled-components'\nimport {\n  backgroundColor,\n  mainButtonColor,\n  mainTextColor,\n  taskBorderColor,\n} from '../../../../config/theme'\n\nexport const Sorting = styled.div`\n  display: flex;\n  background-color: ${backgroundColor};\n  color: ${mainTextColor};\n  border: 1px solid ${taskBorderColor};\n  flex-direction: column;\n  position: absolute;\n  padding: 10px;\n  z-index: 2;\n  top: 100%;\n  left: -114%;\n  box-shadow: 0 0 5px rgba(0,0,0,0.2);\n  \n  \n    \n  @media (max-width: 768px ) {\n   left: -256%;\n  }\n`\n\nexport const Priority = styled.div`\n  display: flex;\n  margin-bottom: 10px;\n`\n\nexport const PriorityItem = styled.label`\n  margin-right: 10px;\n`\n\nexport const PrioritySubmitButton = styled.button`\n  border: none;\n  color: #fff;\n  background-color: ${mainButtonColor};\n  width: 60px;\n  border-radius: 30px;\n  font-size: 14px;\n`\n","import React from 'react'\nimport { Field, Form } from 'react-final-form'\nimport OutsideClickHandler from 'react-outside-click-handler/esm/OutsideClickHandler'\nimport * as S from './styles'\n\nconst PrioritySortForm = ({sortWindow, onSubmit, initialValues, openCloseSortWindow}) => {\n  return(\n      <>\n      {sortWindow && (\n        <OutsideClickHandler\n          disabled={!sortWindow}\n          onOutsideClick={() => openCloseSortWindow()}>\n        <S.Sorting>\n          <Form\n            onSubmit={onSubmit}\n            initialValues={{ sort: initialValues }}\n            render={({ handleSubmit, submitting, pristine }) => (\n              <form onSubmit={handleSubmit}>\n                <S.Priority>\n                    <S.PriorityItem>\n                      <Field name=\"sort\" component=\"input\" type=\"radio\" value=\"All\" required />{' '}\n                      All\n                    </S.PriorityItem>\n                    <S.PriorityItem priority='Low'>\n                      <Field name=\"sort\" component=\"input\" type=\"radio\" value=\"Low\" required />{' '}\n                      Low\n                    </S.PriorityItem>\n                    <S.PriorityItem>\n                      <Field\n                        name=\"sort\"\n                        component=\"input\"\n                        type=\"radio\"\n                        value=\"Medium\"\n                        required\n                      />{' '}\n                      Medium\n                    </S.PriorityItem>\n                    <S.PriorityItem>\n                      <Field name=\"sort\" component=\"input\" type=\"radio\" value=\"High\" required />{' '}\n                      High\n                    </S.PriorityItem>\n                </S.Priority>\n                <div className=\"buttons\">\n                  <S.PrioritySubmitButton type=\"submit\" disabled={submitting || pristine}>\n                    Sort\n                  </S.PrioritySubmitButton>\n                </div>\n              </form>\n            )}\n          />\n        </S.Sorting>\n        </OutsideClickHandler>\n      )}\n      </>\n  )\n}\n\nexport default PrioritySortForm\n","import styled from 'styled-components'\nimport { mainButtonColor, mainTextColor} from 'config/theme'\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 5px;\n`\n\nexport const Title = styled.div`\n  font-size: 27px;\n  font-weight: 700;\n  margin-right: 10px;\n  color: ${mainTextColor};\n  \n  @media (max-width: 768px ) {\n   font-size: 15px;\n  }\n`\n\nexport const TasksCount = styled.div`\n  padding-bottom: 5px;\n  font-size: 27px;\n  font-weight: 700;\n  color: #8996b2;\n  \n  @media (max-width: 768px ) {\n   font-size: 15px;\n  }\n`\n\nexport const SortingContainer = styled.div`\n  display: flex;\n  margin-left: auto;\n  align-items: center;\n`\n\nexport const ViewButton = styled.button`\n  width: 30px;\n  height: 25px;\n  border: none;\n  background-color: transparent;\n  margin-right: 10px;\n  \n  svg {\n  width: 20px;\n  height: 20px;\n  color: aqua;\n  fill: ${mainTextColor};\n  \n  }\n  \n  @media (max-width: 768px ) {\n   margin-right: 5px;\n  }\n`\n\nexport const SortByDateButton = styled.button`\n  font-size: 12px;\n  margin-right: 10px;\n  border: none;\n  background-color: transparent;\n  color: ${mainButtonColor};\n  font-weight: 700;\n`\n\n\nexport const TasksDisplayTypeContainer = styled.div`\n  position: relative;\n`\n\nexport const TasksDisplayTypeButton = styled.button`\n  width: 120px;\n  font-size: 12px;\n  margin-right: 10px;\n  border: none;\n  background-color: transparent;\n  color: ${mainButtonColor};\n  font-weight: 700;\n  \n    @media (max-width: 768px ) {\n    width: 40px\n  }\n`\n\n","import React from 'react'\nimport PrioritySortForm from './PrioritySortForm'\nimport row from 'assets/two-rows-and-three-columns-layout.svg'\nimport column from 'assets/three-rows-layout-content-structure-design.svg'\nimport ReactSVG from 'react-svg'\nimport * as S from './styles'\n\nconst SectionTitle = ({\n  text,\n  showView,\n  count,\n  openCloseSortWindow,\n  sortWindow,\n  sortActiveTasks,\n  initialValues,\n  setDateSortType,\n  dateSortType,\n  setViewType,\n}) => {\n  const onSubmit = value => {\n    sortActiveTasks(value.sort)\n    openCloseSortWindow()\n  }\n  return (\n    <S.Container>\n      <S.Title>{text}</S.Title>\n      <S.TasksCount>({count})</S.TasksCount>\n      {showView && (\n        <S.SortingContainer>\n          <S.ViewButton onClick={() => setViewType('row')}>\n            <ReactSVG src={row} />\n          </S.ViewButton>\n          <S.ViewButton onClick={() => setViewType('column')}>\n            <ReactSVG src={column} />\n          </S.ViewButton>\n          <S.SortByDateButton onClick={setDateSortType}>\n            Sort By Date {dateSortType === 'ASC' ? '▼' : '▲'}\n          </S.SortByDateButton>\n          <S.TasksDisplayTypeContainer>\n            <S.TasksDisplayTypeButton onClick={openCloseSortWindow}>\n              Show {initialValues} ⌵\n            </S.TasksDisplayTypeButton>\n            <PrioritySortForm\n              initialValues={initialValues}\n              onSubmit={onSubmit}\n              sortWindow={sortWindow}\n              openCloseSortWindow={openCloseSortWindow}\n            />\n          </S.TasksDisplayTypeContainer>\n        </S.SortingContainer>\n      )}\n    </S.Container>\n  )\n}\n\nexport default SectionTitle\n","import styled from 'styled-components'\n\nexport const TasksTable = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: ${({viewType}) => viewType === 'column' ? 'column' : 'row'}\n`\n\n\n\n\n\n\n\n\n\n\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport * as selectors from 'store/tasksList/selectors'\nimport { bindActionCreators } from 'redux'\nimport * as actions from 'store/tasksList/actions'\nimport * as thunk from 'store/tasksList/thunk'\nimport Template from '../Template'\nimport Task from './Task'\nimport SectionTitle from './SectionTitle'\nimport * as S from './styles'\nimport { Droppable, DragDropContext } from 'react-beautiful-dnd'\n\nclass TasksList extends React.Component {\n  state = {\n    sortWindow: false,\n  }\n\n  openCloseSortWindow = () => {\n    this.setState(({ sortWindow }) => ({ sortWindow: !sortWindow }))\n  }\n\n  sortActiveTasks = (type = 'All') => {\n    const {\n      actions: { setPrioritySortType },\n    } = this.props\n    setPrioritySortType(type)\n  }\n\n  onDragEnd = result => {\n    const { destination, source, draggableId } = result\n    console.log(result)\n\n    if (destination === null) {\n      return\n    }\n\n    if (destination.droppableId !== source.droppableId) {\n      const { completeTask } = this.props.actions\n      completeTask(draggableId)\n    }\n  }\n\n  render() {\n    const {\n      tasks,\n      prioritySortSelector,\n      priority,\n      dateSortType,\n      viewType,\n      actions: { setDateSortType, setViewType },\n    } = this.props\n    const { sortWindow } = this.state\n    return (\n      <DragDropContext onDragEnd={this.onDragEnd}>\n        <Template>\n          <SectionTitle\n            text=\"To Do\"\n            count={tasks.filter(task => !task.isCompleted).length}\n            openCloseSortWindow={this.openCloseSortWindow}\n            sortWindow={sortWindow}\n            sortActiveTasks={this.sortActiveTasks}\n            initialValues={priority}\n            setDateSortType={setDateSortType}\n            dateSortType={dateSortType}\n            setViewType={setViewType}\n            showView\n          />\n          <Droppable droppableId='activeTasks'>\n            {provided => (\n              <S.TasksTable\n                ref={provided.innerRef}\n                {...provided.droppableProps}\n                viewType={viewType}\n              >\n                {prioritySortSelector.map((task, index) => (\n                  <Task key={task.id} task={task} index={index} viewType={viewType} />\n                ))}\n                {provided.placeholder}\n              </S.TasksTable>\n            )}\n          </Droppable>\n          <SectionTitle\n            text=\"Completed\"\n            showView={false}\n            count={tasks.filter(task => task.isCompleted).length}\n          />\n          <Droppable droppableId='completedTasks'>\n            {provided => (\n              <S.TasksTable ref={provided.innerRef} {...provided.droppableProps}>\n                {tasks.map(\n                  (task, index) =>\n                    task.isCompleted && (\n                      <Task key={task.id} task={task} index={index} viewType={viewType} />\n                    ),\n                )}\n                {provided.placeholder}\n              </S.TasksTable>\n            )}\n          </Droppable>\n        </Template>\n      </DragDropContext>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    tasks: selectors.tasksSelector(state),\n    lowPriorityTasks: selectors.lowPriorityTasksSelector(state),\n    mediumPriorityTasks: selectors.mediumPriorityTasksSelector(state),\n    highPriorityTasks: selectors.highPriorityTasksSelector(state),\n    tasksDescendingOrder: selectors.sortedByDateTasksDescendingSelector(state),\n    prioritySortSelector: selectors.prioritySortSelector(state),\n    priority: selectors.prioritySelector(state),\n    dateSortType: selectors.dateSortType(state),\n    viewType: selectors.viewTypeSelector(state),\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(\n    {\n      setPrioritySortType: actions.setPrioritySortType,\n      setDateSortType: actions.setDateSortType,\n      completeTask: thunk.completeTask,\n      setViewType: actions.setViewType,\n    },\n    dispatch,\n  ),\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(TasksList)\n","import React from 'react'\nimport { Switch, Route } from 'react-router'\nimport routes from 'config/routes'\nimport Settings from 'pages/Settings'\nimport TasksList from 'pages/TasksList'\n\nconst Routes = () => (\n  <Switch>\n    <Route path={routes.root} exact component={TasksList} />\n    <Route path={routes.setting} component={Settings} />\n  </Switch>\n)\n\nexport default Routes\n","import React from 'react'\nimport { Global, css } from '@emotion/core'\n\nconst styles = css`\n  a,\n  abbr,\n  acronym,\n  address,\n  applet,\n  article,\n  aside,\n  audio,\n  b,\n  big,\n  blockquote,\n  body,\n  canvas,\n  caption,\n  center,\n  cite,\n  code,\n  dd,\n  del,\n  details,\n  dfn,\n  div,\n  dl,\n  dt,\n  em,\n  embed,\n  fieldset,\n  figcaption,\n  figure,\n  footer,\n  form,\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6,\n  header,\n  hgroup,\n  html,\n  i,\n  iframe,\n  img,\n  ins,\n  kbd,\n  label,\n  legend,\n  li,\n  mark,\n  menu,\n  nav,\n  object,\n  ol,\n  output,\n  p,\n  pre,\n  q,\n  ruby,\n  s,\n  samp,\n  section,\n  small,\n  span,\n  strike,\n  strong,\n  sub,\n  summary,\n  sup,\n  table,\n  tbody,\n  td,\n  tfoot,\n  th,\n  thead,\n  time,\n  tr,\n  tt,\n  u,\n  ul,\n  var,\n  video {\n    border: 0;\n    font: inherit;\n    margin: 0;\n    padding: 0;\n    vertical-align: baseline;\n  }\n\n  article,\n  aside,\n  details,\n  figcaption,\n  figure,\n  footer,\n  header,\n  hgroup,\n  main,\n  menu,\n  nav,\n  section,\n  summary {\n    display: block;\n  }\n\n  ol,\n  ul {\n    list-style: none;\n  }\n\n  blockquote,\n  q {\n    quotes: none;\n  }\n\n  blockquote:after,\n  blockquote:before {\n    content: none;\n  }\n\n  q:after,\n  q:before {\n    content: none;\n  }\n\n  html {\n    font-family: sans-serif;\n    -webkit-text-size-adjust: 100%;\n    -ms-text-size-adjust: 100%;\n  }\n\n  audio,\n  canvas,\n  progress,\n  video {\n    display: inline-block;\n    vertical-align: baseline;\n  }\n\n  audio:not([controls]) {\n    display: none;\n    height: 0;\n  }\n\n  [hidden],\n  template {\n    display: none;\n  }\n\n  a {\n    background-color: transparent;\n    color: inherit;\n    text-decoration: none;\n  }\n\n  a:active,\n  a:hover,\n  a:focus {\n    outline: none;\n    text-decoration: none;\n  }\n\n  abbr[title] {\n    border-bottom: 1px dotted;\n  }\n\n  b,\n  optgroup,\n  strong {\n    font-weight: 700;\n  }\n\n  dfn {\n    font-style: italic;\n  }\n\n  mark {\n    background: #ff0;\n    color: #000;\n  }\n\n  small {\n    font-size: 80%;\n  }\n\n  sub {\n    font-size: 75%;\n    line-height: 0;\n    position: relative;\n    vertical-align: baseline;\n  }\n\n  sup {\n    font-size: 75%;\n    line-height: 0;\n    position: relative;\n    top: -0.5em;\n    vertical-align: baseline;\n  }\n\n  sub {\n    bottom: -0.25em;\n  }\n\n  img {\n    border: 0;\n    vertical-align: middle;\n  }\n\n  svg:not(:root) {\n    overflow: hidden;\n  }\n\n  figure {\n    margin: 0;\n  }\n\n  hr {\n    box-sizing: content-box;\n    height: 0;\n  }\n\n  pre,\n  textarea {\n    overflow: auto;\n  }\n\n  code,\n  kbd,\n  pre,\n  samp {\n    font-family: monospace;\n    font-size: 1em;\n  }\n\n  button,\n  input,\n  optgroup,\n  select,\n  textarea {\n    color: inherit;\n    font: inherit;\n    margin: 0;\n  }\n\n  button {\n    overflow: visible;\n    text-transform: none;\n  }\n\n  select {\n    text-transform: none;\n  }\n\n  button,\n  html input[type='button'] {\n    cursor: pointer;\n    -webkit-appearance: button;\n  }\n\n  input[type='reset'],\n  input[type='submit'] {\n    cursor: pointer;\n    -webkit-appearance: button;\n  }\n\n  button[disabled],\n  html input[disabled] {\n    cursor: default;\n  }\n\n  button::-moz-focus-inner {\n    border: 0;\n    padding: 0;\n  }\n\n  input {\n    line-height: normal;\n  }\n\n  input::-moz-focus-inner {\n    border: 0;\n    padding: 0;\n  }\n\n  input[type='checkbox'],\n  input[type='radio'] {\n    box-sizing: border-box;\n    padding: 0;\n  }\n\n  input[type='number']::-webkit-inner-spin-button,\n  input[type='number']::-webkit-outer-spin-button {\n    height: auto;\n  }\n\n  input[type='search'] {\n    box-sizing: content-box;\n    -webkit-appearance: textfield;\n  }\n\n  input[type='search']::-webkit-search-cancel-button,\n  input[type='search']::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  fieldset {\n    border: 1px solid #c0c0c0;\n    margin: 0 2px;\n    padding: 0.35em 0.625em 0.75em;\n  }\n\n  legend {\n    border: 0;\n    padding: 0;\n  }\n\n  table {\n    border-collapse: collapse;\n    border-spacing: 0;\n  }\n\n  td,\n  th {\n    padding: 0;\n  }\n\n  input:focus,\n  textarea:focus,\n  select:focus,\n  button:focus,\n  div:focus {\n    outline: none;\n  }\n\n  img {\n    display: block;\n    max-width: 100%;\n    height: auto;\n  }\n\n  * {\n    box-sizing: border-box;\n    -webkit-box-sizing: border-box;\n    -moz-box-sizing: border-box;\n  }\n\n  *:before,\n  *:after {\n    box-sizing: border-box;\n    -webkit-box-sizing: border-box;\n    -moz-box-sizing: border-box;\n  }\n\n  html {\n    font-size: 14px;\n    -webkit-tap-highlight-color: transparent;\n  }\n\n  body {\n    background-color: #fff;\n    color: #333;\n    font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;\n    font-size: 14px;\n    line-height: 1.42857143;\n    margin: 0;\n    -webkit-overflow-scrolling: touch;\n    -ms-overflow-style: scrollbar;\n    -webkit-font-smoothing: antialiased;\n  }\n`\n\nconst GlobalStyle = () => <Global styles={styles} />\n\nexport default GlobalStyle\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { ConnectedRouter } from 'connected-react-router'\nimport ThemeProvider from 'utils/ThemeProvider'\nimport store, { history, persistor } from 'store'\nimport Routes from 'routes'\nimport GlobalStyle from 'GlobalStyle'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport { BrowserRouter } from 'react-router-dom'\n\nconst App = () => (\n  <>\n    <Provider store={store}>\n      <PersistGate persistor={persistor}>\n        <BrowserRouter>\n          <ThemeProvider>\n            <Routes />\n          </ThemeProvider>\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n    <GlobalStyle />\n  </>\n)\n\nexport default App\n","import React from 'react'\nimport { render } from 'react-dom'\nimport App from 'App'\n\nconst root = document.getElementById('root')\n\nrender(<App />, root)\n\nif (module.hot) {\n  module.hot.accept('./App', () => {\n    const NextApp = require('./App').default // eslint-disable-line no-console\n    render(<NextApp />, root)\n  })\n}\n","module.exports = __webpack_public_path__ + \"static/media/to-do-list.dfa44a76.svg\";","module.exports = __webpack_public_path__ + \"static/media/home.32309746.svg\";","module.exports = __webpack_public_path__ + \"static/media/settings.ef6fb876.svg\";","module.exports = __webpack_public_path__ + \"static/media/spiderman.ca8adc9b.jpg\";"],"sourceRoot":""}